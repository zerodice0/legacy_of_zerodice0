---
const today = new Date();

const routeList = [
	{route: "blog", title: "블로그"},
	{route: "server", title: "서버"},
	{route: "compile", title: "크로스 컴파일"},
	{route: "mobile", title: "모바일"},
];
---

<script>
	class SpeechBlackBear extends HTMLElement {
		speechList = [
			"검은곰의 인수인계 페이지입니다.",
			"문제는 잘 해결되고 있나요?",
			"뭐, 어떻게건 되겠죠."
		]
		speechIndex = 0;
		

		constructor() {
			super();
			
			const speechBubble = this.querySelector<HTMLHtmlElement>(".speech-bubble");
			const speechBubbleText = this.querySelector<HTMLHtmlElement>("#speech-bubble-text");
      
      this.addEventListener("mouseleave", () => {
        speechBubble && (speechBubble.style.opacity = "0%");
      });

			this.addEventListener("mouseenter", () => {
				const newSpeechIndex = Math.floor(
					Math.random()*this.speechList.length
				);
			
				if (this.speechIndex != newSpeechIndex && speechBubbleText) {
					this.speechIndex = newSpeechIndex;
					speechBubbleText.textContent = this.speechList[this.speechIndex];
				}

				speechBubble && (speechBubble.style.opacity = "100%");
			});

			if (speechBubbleText) {
				speechBubbleText.textContent = this.speechList[this.speechIndex];
			}
		}
	}

	customElements.define("speech-black-bear", SpeechBlackBear)
</script>

<footer>
	<speech-black-bear>
		<hgroup class="speech-bubble">
			<span id="speech-bubble-text"></span>
			<ul class="menu-list">
				{
					<li>
						<a 
							class="menu-list-item"
							href={`${import.meta.env.BASE_URL}/`}
						>메인으로 돌아가기</a>
					</li>
				}
				{
					routeList.map((route) => (
						<li>
							<a
								class="menu-list-item"
								href={`${import.meta.env.BASE_URL}/${route.route}`}
							>
								{route.title}에 대해서
							</a>
						</li>
					))
				}

			</ul>
		</hgroup>
		<img
			class="footer-image"
			src=`${import.meta.env.BASE_URL}/smile.png`/>
	</speech-black-bear>
	&copy; {today.getFullYear()} ITX AI<br/> All rights reserved.
</footer>

<style>
	footer {
		padding: 2em 1em 6em 1em;
		background: linear-gradient(var(--gray-gradient)) no-repeat;
		color: rgb(var(--gray));
		text-align: center;
	}

	@keyframes smilebear_animation {
		from {
			transform:rotate(-3deg);
		}

		to {
			transform:rotate(+3deg);
		}
	}

	.footer-image {
		position: fixed;
		right: 0px;
		bottom: -5px;
		width: auto;
		height: 200px;

		animation-duration: 0.3s;
		animation-name: smilebear_animation;
		animation-iteration-count: infinite;
		animation-direction: alternate;
	}

	.menu-list {
		margin-top: 20px;
		list-style: none;
		padding-left: 0;
	}

	.menu-list-item {
		color: antiquewhite;
		text-decoration: none;
		outline: 0;
	}

	.menu-list-item,
	.menu-list-item:focus,
	.menu-list-item:hover,
	.menu-list-item:visited {
		color: antiquewhite;
		text-decoration: none;
		outline: 0;
	}

	.speech-bubble {
		opacity: 0%;
		position: fixed;
		width: 350px;
		right: 30px;
		bottom: 210px;
		background: #000000;
		border-radius: .4em;
		padding: 10px;
		color: white;

    transition: ease-in-out 0.25s;
	}

	.speech-bubble:after {
		content: '';
		position: absolute;
		bottom: 0;
		right: 75px;
		width: 0;
		height: 0;
		border: 20px solid transparent;
		border-top-color: #000000;
		border-bottom: 0;
		border-right: 0;
		margin-left: -10px;
		margin-bottom: -20px;
	}
</style>