---
---

<div class="popup_bear">
  <hgroup class="speech_bubble">
    아~ 집에 가고싶다~
  </hgroup>
  <img class="popup_bear_image" src={`${import.meta.env.BASE_URL}/smile.png`}/>
</div>

<script>
  const speechList = [
    "아~ 집에 가고싶다.",
    "점심시간은 멀었나?",
    "오늘 야근해야되나?",
    "아~ 졸립다.",
    "집에 가기 딱 좋은 날씨네.",
    "또 엄성준 씨 버그냐?",
    "팀장님 오늘 연차셔?",
    "아? 이게 돌아가?",
    "그걸 왜 나한테 물어봐?",
    "제가요? 그걸요?",
    "아닐껄요?",
    "안되는데요?",
    "기분탓일껄?",
  ]
  const height = "200px";
  const popup = (position: string, startPoint: number) => {
    const speechSeed = Math.floor(Math.random() * speechList.length);
    const popupBear = document.querySelector<HTMLHtmlElement>(".popup_bear");
    const speechBubble = document.querySelector<HTMLImageElement>(".speech_bubble");

    const rotate = position === "left" ? 90
        : position === "right" ? 270
        : 180; // top
        
    if (speechBubble) {
      speechBubble.textContent = speechList[speechSeed];
    }

    if (popupBear) {
      popupBear.style.animationDuration = "5s";
      popupBear.style.animationPlayState = "running";
      popupBear.style.webkitTransform = `rotate(${rotate}deg)`; 
      popupBear.style.transform = `rotate(${rotate}deg);`
      popupBear.style.animationName = `pop_in_and_out_${position}`;

      popupBear.style.removeProperty("left");
      popupBear.style.removeProperty("top");
      popupBear.style.removeProperty("right");

      const start = startPoint < 200 ? 200 : startPoint;
      if (position === "left") {
        popupBear.style.left = `-${height}`;
        popupBear.style.top = `${start}px`;
      } else if (position === "right") {
        popupBear.style.right = `-${height}`;
        popupBear.style.top = `${start}px`;
      } else {
        popupBear.style.top = `-${height}`;
        popupBear.style.left = `${start}px`;
      }
    }
  }

  const randomPopup = () => {
    const randomDelay = Math.random() * 60 + 5;
    const positions = ["left", "top", "right"];
    const positionSeed = Math.floor(Math.random() * 3);
    const position = positions[positionSeed];

    const baseSize = position === "top" ? window.innerWidth
      : window.innerHeight;
    const newBaseSize = Math.floor(baseSize * Math.random());

    popup(position, newBaseSize > 200 ? newBaseSize - 200 : 200);

    
    setTimeout(() => {
      randomPopup();
    }, randomDelay * 1000);
  }

  setTimeout(() => {
    randomPopup();
  }, 10*1000);
</script>

<style>
  @keyframes pop_in_and_out_left {
    0% { left: -200px; }
    25%, 75% { left: 0px; }
    100% { left: -200px; }
  }

  @keyframes pop_in_and_out_right {
    0% { right: -200px; }
    25%, 75% { right: 0px; }
    100% { right: -200px; }
  }

  @keyframes pop_in_and_out_top {
    0% { top: -200px; }
    25%, 75% { top: 0px; }
    100% { top: -200px; }
  }

  .popup_bear {
    top: -200px;
    display: flex;

    position: fixed;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
    animation-direction: alternate;
  }
  .popup_bear img {
    width: 100px;
    height: 100px;
    position:relative;
  }

  .speech_bubble {
    position: absolute;
		min-width: 100px;
    max-width: 200px;
    text-wrap: nowrap;
		bottom: 120px;
		background: #000000;
		border-radius: .4em;
		padding: 10px;
		color: white;

    animation-name: soft-blink;
    animation-duration: 5s;
    animation-play-state: paused;
    animation-timing-function: ease-in-out;
	}

	.speech_bubble:after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 40px;
		width: 0;
		height: 0;
		border: 20px solid transparent;
		border-top-color: #000000;
		border-bottom: 0;
		border-right: 0;
		margin-left: -10px;
		margin-bottom: -20px;
	}
</style>